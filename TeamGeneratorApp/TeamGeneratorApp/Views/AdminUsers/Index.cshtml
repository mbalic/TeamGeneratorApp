@model PagedList.IPagedList<TeamGeneratorApp.Models.ViewModels.AdminUserIndexVM>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Users";
}

<h2>Users</h2>
<hr/>
<p>
    @Html.ActionLink("Back", "Index", "Admin")
</p>
<p>
    @Html.ActionLink("Create new", "Create")
</p>
<br />
@using (Html.BeginForm("Index", "AdminUsers", FormMethod.Get))
{
    <p>
        Find by @Html.DropDownList("ddlFilter") : @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Username", "Index", new { sortOrder = ViewBag.UsernameSortParm, currentFilter = ViewBag.CurrentFilter, ddlFilter = Request.QueryString["ddlFilter"] })
        </th>
        <th>
            @Html.ActionLink("Email", "Index", new {sortOrder = ViewBag.EmailSortParm, currentFilter = ViewBag.CurrentFilter, ddlFilter = Request.QueryString["ddlFilter"]})
        </th>
        <th>
            Is admin
            @*@Html.ActionLink("Is admin", "Index", new { sortOrder = ViewBag.SortParm, currentFilter = ViewBag.CurrentFilter, ddlFilter = Request.QueryString["ddlFilter"] })*@
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.EmailConfirmed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PasswordHash)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SecurityStamp)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumberConfirmed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TwoFactorEnabled)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LockoutEndDateUtc)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LockoutEnabled)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AccessFailedCount)
        </th>*@

        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsAdmin)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.EmailConfirmed)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PasswordHash)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SecurityStamp)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhoneNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhoneNumberConfirmed)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TwoFactorEnabled)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LockoutEndDateUtc)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LockoutEnabled)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AccessFailedCount)
        </td>*@

        <td>
            @Html.ActionLink("Edit", "Edit", new {id = item.Id}) |
            @*@Html.ActionLink("Details", "Details", new {id = item.Id}) |*@
            @Html.ActionLink("Delete", "Delete", new {id = item.Id})
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, ddlFilter = Request.QueryString["ddlFilter"] }))
