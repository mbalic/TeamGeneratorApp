@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Users";
}

<h2>Users</h2>
<hr/>
<p>
    @Html.ActionLink("Back", "Index", "Admin")
</p>
@*<p>
    @Html.ActionLink("Create new", "Create")
</p>*@
<br/>

<script type="text/javascript">
    function viewEdit(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var itemId = dataItem.Id

        @*window.location.href = "@Url.Action("Details","AdminUsers")?id=" + itemId;*@

        };

    function viewDetails(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var itemId = dataItem.Id

        @*window.location.href = "@Url.Action("Details","AdminUsers")?id=" + itemId;*@

    };
</script>

@(Html.Kendo().Grid<TeamGeneratorApp.Models.ViewModels.AdminUserIndexVM>()
    .Name("usersGrid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Name);
        columns.Bound(p => p.UserName);
        columns.Bound(p => p.Email);
        columns.Bound(p => p.IsAdmin)
            .ClientTemplate("<input type='checkbox' #= IsAdmin ? checked='checked': '' # class='chkbx' />")
            .HtmlAttributes(new { style = "text-align: center" });
        //columns.Command(command => { command.Edit(); command.Destroy(); }).Width(200);
        columns.Command(command => command.Custom("Edit").Click("viewEdit"));
        columns.Command(command => command.Custom("Details").Click("viewDetails"));
    })
    //.ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:550px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .ServerOperation(false)
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
         .Model(model =>
         {
             model.Id(p => p.Id);
         })
        .Create(update => update.Action("AdminUsersGrid_Create", "AdminUsers"))
        .Read(read => read.Action("AdminUsersGrid_Read", "AdminUsers"))
        .Update(update => update.Action("AdminUsersGrid_Update", "AdminUsers"))
        .Destroy(update => update.Action("AdminUsersGrid_Destroy", "AdminUsers"))
    )

)
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    };

    $(function () {
        $('#usersGrid').on('click', '.chkbx', function () {
            var checked = $(this).is(':checked');
            var grid = $('#usersGrid').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            dataItem.set('IsAdmin', checked);
        });
    });
</script>

