
@*@using Kendo.Mvc.UI
@{
    Layout = null;
}

@Styles.Render("~/Content/css")
@Styles.Render("~/Content/kendo/css")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/kendo")


@(Html.Kendo().Grid<TeamGeneratorApp.Models.ViewModels.UserInPoolVM>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.User.UserName);
        columns.Bound(p => p.Weight);
        columns.Bound(p => p.Score);
        columns.Bound(p => p.NumberOfTeams);
        columns.Bound(p => p.Start);
        columns.Bound(p => p.Finish);
        //columns.Command(command => { command.Edit(); command.Destroy(); }).Width(250);
    })
    //.ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:550px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .ServerOperation(false)
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.Id))
        //.Create(update => update.Action("PoolEvents_Create", "Pools", new { poolId = ViewBag.PoolId }))
        .Read(read => read.Action("PoolEvents_Read", "Pools", new { poolId = ViewBag.PoolId }))
    //.Update(update => update.Action("PoolEvents_Update", "Pools"))
    //.Destroy(update => update.Action("PoolEvents_Destroy", "Pools"))
    )

)
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>*@

