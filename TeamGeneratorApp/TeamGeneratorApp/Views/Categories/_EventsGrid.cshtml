@using Kendo.Mvc.UI
@{
    Layout = null;
}

@Styles.Render("~/Content/css")
@Styles.Render("~/Content/kendo/css")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/kendo")


@if (ViewBag.IsOwner)
{
    @(Html.Kendo().Grid<TeamGeneratorApp.Models.ViewModels.EventVM>()
          .Name("grid1")
          .Columns(columns =>
          {
              columns.Bound(p => p.Id).Visible(false);
              columns.Bound(p => p.Name);
              columns.Bound(p => p.Description);
              columns.Bound(p => p.Start).HtmlAttributes(new
              {
                  @class = "templateCell"

              }).ClientTemplate(
                  Html.Kendo().DatePicker()
                      .Name("FDPicker_#=Id#1")
                      .Format("{0:dd/MM/yyyy HH:mm}")
                      .HtmlAttributes(new {data_bind = "value:Start"})
                      .ToClientTemplate().ToString()

                  ).Format("{0:dd/MM/yyyy HH:mm}").Width(200);
              columns.Bound(p => p.Finish).HtmlAttributes(new
              {
                  @class = "templateCell"

              }).ClientTemplate(
                  Html.Kendo().DatePicker()
                      .Name("FDPicker_#=Id#2")
                      .Format("{0:dd/MM/yyyy HH:mm}")
                      .HtmlAttributes(new {data_bind = "value:Finish"})
                      .ToClientTemplate().ToString()
                  ).Format("{0:dd/MM/yyyy HH:mm}").Width(200);
              columns.Command(command =>
              {
                  command.Edit();
                  command.Destroy();
              }).Width(200);
              columns.Command(command => command.Custom("Details").Click("viewEvent"));
          })
          .ColumnMenu()
          .Events(e => e.DataBound("db"))
          .ToolBar(toolbar => toolbar.Create())
          .Editable(editable => editable.Mode(GridEditMode.InLine))
          .Pageable()
          .Sortable()
          .Scrollable()
          .Resizable(resize => resize.Columns(true))
          .HtmlAttributes(new {style = "height:550px;"})
          .DataSource(dataSource => dataSource
              .Ajax()
              .Batch(true)
              .ServerOperation(false)
              .PageSize(20)
              .Events(events => events.Error("error_handler").Sync("sync_handler"))
              .Model(model =>
              {
                  model.Id(p => p.Id);
                  model.Field(p => p.CategoryId).DefaultValue(ViewBag.CategoryId);
              })
              .Create(update => update.Action("EventsGrid_Create", "Categories"))
              .Read(read => read.Action("EventsGrid_Read", "Categories", new {categoryId = ViewBag.CategoryId}))
              .Update(update => update.Action("EventsGrid_Update", "Categories"))
              .Destroy(update => update.Action("EventsGrid_Destroy", "Categories"))
          )

          )
}
else
{
    @(Html.Kendo().Grid<TeamGeneratorApp.Models.ViewModels.EventVM>()
          .Name("grid1")
          .Columns(columns =>
          {
              columns.Bound(p => p.Id).Visible(false);
              columns.Bound(p => p.Name);
              columns.Bound(p => p.Description);
              columns.Bound(p => p.Start).Format("{0:dd/MM/yyyy HH:mm}");
              columns.Bound(p => p.Finish).Format("{0:dd/MM/yyyy HH:mm}");
              columns.Command(command => command.Custom("Details").Click("viewEvent"));
          })
          .ColumnMenu()
          .Pageable()
          .Sortable()
          .Scrollable()
          .Resizable(resize => resize.Columns(true))
          .HtmlAttributes(new { style = "height:550px;" })
          .DataSource(dataSource => dataSource
              .Ajax()
              .Batch(true)
              .ServerOperation(false)
              .PageSize(20)
              .Events(events => events.Error("error_handler").Sync("sync_handler"))
              .Model(model =>
              {
                  model.Id(p => p.Id);
                  model.Field(p => p.CategoryId).DefaultValue(ViewBag.CategoryId);
              })
              .Read(read => read.Action("EventsGrid_Read", "Categories", new { categoryId = ViewBag.CategoryId }))
          )

    )
}


<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    };
    function sync_handler(e) {
        this.read();
    };

    function viewEvent(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var eventId = dataItem.Id;

        window.location.href = "@Url.Action("Details","Events")?id=" + eventId;

    }

    function db(e) {
        var grid = this;
        $(".templateCell").each(function () {
            eval($(this).children("script").last().html());
            var tr = $(this).closest('tr');
            var item = grid.dataItem(tr);
            kendo.bind($(this), item);
        });
    };
</script>
