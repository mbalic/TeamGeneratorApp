@using Kendo.Mvc.UI
@{
    Layout = null;
}

@Styles.Render("~/Content/css")
@Styles.Render("~/Content/kendo/css")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/kendo")

<script type="text/javascript">
    
    function viewVoting(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var userId = dataItem.Id;

        @*window.location.href = "@Url.Action("Details","AdminUser")?id=" + eventId;*@
    }
    function db(e) {
        var grid = this;
        $(".templateCell").each(function () {
            eval($(this).children("script").last().html());
            var tr = $(this).closest('tr');
            var item = grid.dataItem(tr);
            kendo.bind($(this), item);
        });
        this.table.find(".k-grid-edit").hide();
    };
</script>



@(Html.Kendo().Grid<TeamGeneratorApp.Models.ViewModels.VotingVM>()
        .Name("votingsGrid")
        .Columns(columns =>
        {
            columns.Bound(p => p.Name).Title("Name");
            columns.Bound(p => p.StartVoting).HtmlAttributes(new
            {
                @class = "templateCell"

            }).ClientTemplate(
                Html.Kendo().DatePicker()
                 .Name("FDPicker_#=Id#1")
                 .Format("{0:dd/MM/yyyy}")
                 .HtmlAttributes(new { data_bind = "value:StartVoting" })
                 .ToClientTemplate().ToString()

                 ).Format("{0:dd/MM/yyyy}").Width(200);
            columns.Bound(p => p.FinishVoting).HtmlAttributes(new
            {
                @class = "templateCell"

            }).ClientTemplate(
                     Html.Kendo().DatePicker()
                      .Name("FDPicker_#=Id#2")
                      .Format("{0:dd/MM/yyyy}")
                      .HtmlAttributes(new { data_bind = "value:FinishVoting" })
                      .ToClientTemplate().ToString()
                      ).Format("{0:dd/MM/yyyy}").Width(200);
            columns.Bound(p => p.Active);
                   //.ClientTemplate("<input type='checkbox' #= Active ? checked='checked': '' # class='chkbx' />")
                   //.HtmlAttributes(new { style = "text-align: center" });
            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(200);
            columns.Command(command => command.Custom("Details").Click("viewVoting"));
        })
        .Events(e => e.DataBound("db"))
        .ToolBar(toolbar => toolbar.Create())
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Pageable()
        .Sortable()
        .Scrollable()
        .HtmlAttributes(new { style = "height:550px;" })
        .DataSource(dataSource => dataSource
            .Ajax()
            .Batch(true)
            .ServerOperation(false)
            .PageSize(20)
            .Events(events => events.Error("error_handler").Sync("sync_handler"))
            .Model(model =>
            {
                model.Id(p => p.Id);
                model.Field(p => p.EventId).DefaultValue(ViewBag.EventId);
                model.Field(p => p.Active).DefaultValue(false).Editable(false);
            })
            .Create(update => update.Action("VotingsGrid_Create", "Events"))
            .Read(read => read.Action("VotingsGrid_Read", "Events", new { eventId = ViewBag.EventId }))
            .Update(update => update.Action("EventsGrid_Update", "AdminCategories"))
            .Destroy(update => update.Action("VotingsGrid_Destroy", "Events"))

        )

)



<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    function sync_handler(e) {
        this.read();
    };
</script>


