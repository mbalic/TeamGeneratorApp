@using Kendo.Mvc.UI
@{
    Layout = null;
}

@Styles.Render("~/Content/css")
@Styles.Render("~/Content/kendo/css")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/kendo")

<script type="text/javascript">
    function viewUser(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var userId = dataItem.Id;

        @*window.location.href = "@Url.Action("Details","AdminUser")?id=" + eventId;*@
    };

    function db() {
        this.table.find(".k-grid-edit").hide();
    }; 

</script>


@* if voting started, only read, else create and delete (ipak ne, odustalo se od toga jer sustav koristi administratorska osoba koja bi trebala moci sve mijenjati)*@
@*@if (!ViewBag.VotingStarted)
{*@

    @(Html.Kendo().Grid<TeamGeneratorApp.Models.ViewModels.UserOnEventVM>()
          .Name("usersGrid1")
          .Columns(columns =>
          {
              columns.ForeignKey(p => p.UserInCategoryId, (System.Collections.IEnumerable)ViewData["users"], "Id", "Name").Title("User").Width(200);
              columns.ForeignKey(p => p.PositionId, (System.Collections.IEnumerable)ViewData["positions"], "Id", "Name").Title("Position").Width(200);
              columns.Bound(p => p.Rating);
              columns.Command(command =>
              {
                  command.Edit();
                  command.Destroy();
              });
              columns.Command(command => command.Custom("Details").Click("viewUser"));
          })
          .Events(e => e.DataBound("db"))
          .ToolBar(toolbar => toolbar.Create())
          .Editable(editable => editable.Mode(GridEditMode.InLine))
          .Pageable()
          .Sortable()
          .Scrollable()
          .HtmlAttributes(new {style = "height:550px;"})
          .DataSource(dataSource => dataSource
              .Ajax()
              .Batch(true)
              .ServerOperation(false)
              .PageSize(20)
              .Events(events => events.Error("error_handler").Sync("sync_handler"))
              .Model(model =>
              {
                  model.Id(p => p.Id);
                  model.Field(p => p.EventId).DefaultValue(ViewBag.EventId);
                  model.Field(p => p.Rating).DefaultValue(1500).Editable(false);
              })
              .Create(update => update.Action("UsersGrid_Create", "Events"))
              .Read(read => read.Action("UsersGrid_Read", "Events", new {eventId = ViewBag.EventId}))
              .Update(update => update.Action("UsersGrid_Update", "Events"))
             .Destroy(update => update.Action("UsersGrid_Destroy", "Events"))
          )

          )
@*}
else
{
    @(Html.Kendo().Grid<TeamGeneratorApp.Models.ViewModels.UserOnEventVM>()
          .Name("usersGrid2")
          .Columns(columns =>
          {
              columns.Bound(p => p.UserPersonalName).Title("User");
              columns.Command(command => command.Custom("Details").Click("viewUser"));
          })
          //.ToolBar(toolbar => toolbar.Create())
          //.Editable(editable => editable.Mode(GridEditMode.InLine))
          .Pageable()
          .Sortable()
          .Scrollable()
          .HtmlAttributes(new { style = "height:550px;" })
          .DataSource(dataSource => dataSource
              .Ajax()
              .Batch(true)
              .ServerOperation(false)
              .PageSize(20)
              .Events(events => events.Error("error_handler"))
              .Model(model =>
              {
                  model.Id(p => p.Id);
                  model.Field(p => p.EventId).DefaultValue(ViewBag.EventId);
              })
              //.Create(update => update.Action("UsersGrid_Create", "Events"))
              .Read(read => read.Action("UsersGrid_Read", "Events", new { eventId = ViewBag.EventId }))
          //.Update(update => update.Action("EventsGrid_Update", "Events"))
          //.Destroy(update => update.Action("UsersGrid_Destroy", "Events"))
          )

    )
}*@


<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    function sync_handler(e) {
        this.read();
    };
</script>

