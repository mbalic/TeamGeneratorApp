@using Kendo.Mvc.UI
@{
    Layout = null;
}

@Styles.Render("~/Content/css")
@Styles.Render("~/Content/kendo/css")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/kendo")



@(Html.Kendo().Grid<TeamGeneratorApp.Models.ViewModels.TeamVM>()
        .Name("teamsGrid")
        .Columns(columns =>
        {
            columns.Bound(p => p.Name);
            columns.Bound(p => p.Strength);
            columns.Bound(p => p.SuccessPercentage);
            columns.Command(command =>
              {
                  command.Edit();
              });
        })
        //.ToolBar(toolbar => toolbar.Create())
        //.Editable(editable => editable.Mode(GridEditMode.InLine))
        .Pageable()
        .Sortable()
        .Scrollable()
        .HtmlAttributes(new { style = "height:550px;" })
        .DataSource(dataSource => dataSource
            .Ajax()
            .Batch(true)
            .ServerOperation(false)
            .PageSize(20)
            .Events(events => events.Error("error_handler"))
            .Model(model =>
            {
                model.Id(p => p.Id);
                model.Field(p => p.GeneratorId).DefaultValue(ViewBag.GeneratorId);
                model.Field(p => p.Strength).Editable(false);
            })
            //.Create(update => update.Action("UsersGrid_Create", "Events"))
            .Read(read => read.Action("TeamsGrid_Read", "Events", new { generatorId = ViewBag.GeneratorId }))
            .Update(update => update.Action("TeamsGrid_Update", "Events"))
        //.Destroy(update => update.Action("UsersGrid_Destroy", "Events"))
        )

)

    <script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    function sync_handler(e) {
        this.read();
    };
    </script>


