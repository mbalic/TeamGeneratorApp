@using Kendo.Mvc.UI
@{
    Layout = null;
}

@Styles.Render("~/Content/css")
@Styles.Render("~/Content/kendo/css")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/kendo")



@if (ViewBag.IsOwner)
{
    @(Html.Kendo().Grid<TeamGeneratorApp.Models.ViewModels.TeamVM>()
          .Name("teamsGrid")
          .Columns(columns =>
          {
              columns.Bound(p => p.Name);
              columns.Bound(p => p.Strength);
              columns.Bound(p => p.SuccessPercentage);
              columns.Command(command =>
              {
                  command.Edit();
              });
          })
          .ColumnMenu()
          .Pageable()
          .Sortable()
          .Scrollable()
          .Resizable(resize => resize.Columns(true))
          .HtmlAttributes(new {style = "height:550px;"})
          .DataSource(dataSource => dataSource
              .Ajax()
              .Batch(true)
              .ServerOperation(false)
              .PageSize(20)
              .Events(events => events.Error("error_handler"))
              .Model(model =>
              {
                  model.Id(p => p.Id);
                  model.Field(p => p.GeneratorId).DefaultValue(ViewBag.GeneratorId);
                  model.Field(p => p.Strength).Editable(false);
              })
              .Read(read => read.Action("TeamsGrid_Read", "Events", new {generatorId = ViewBag.GeneratorId}))
              .Update(update => update.Action("TeamsGrid_Update", "Events"))
          )

          )
}
else
{
    @(Html.Kendo().Grid<TeamGeneratorApp.Models.ViewModels.TeamVM>()
            .Name("teamsGrid")
            .Columns(columns =>
            {
                columns.Bound(p => p.Name);
                //columns.Bound(p => p.Strength);
                columns.Bound(p => p.SuccessPercentage);
            })
            .ColumnMenu()
            .Pageable()
            .Sortable()
            .Scrollable()
            .Resizable(resize => resize.Columns(true))
            .HtmlAttributes(new { style = "height:550px;" })
            .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .ServerOperation(false)
                .PageSize(20)
                .Events(events => events.Error("error_handler"))
                .Model(model =>
                {
                    model.Id(p => p.Id);
                    model.Field(p => p.GeneratorId).DefaultValue(ViewBag.GeneratorId);
                    model.Field(p => p.Strength).Editable(false);
                })
                .Read(read => read.Action("TeamsGrid_Read", "Events", new { generatorId = ViewBag.GeneratorId }))
            )

    )
}


<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    function sync_handler(e) {
        this.read();
    };
    </script>


